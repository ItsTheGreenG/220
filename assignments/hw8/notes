def average_sentinel():
    acc= 0
    count= 0
    num = 0
    num = eval(input("enter a number" (negative to exit)>>")
    while num >= 0:
        acc = acc + num
        count = count + 1
        num = eval(input("enter a number" (negative to exit)>>")
    print("average: {}".format(acc / count))
    average_sentinel()



   def average_sentinel():
    acc= 0
    count= 0
    num = 0
    num = input("enter a number" (enter exit)>>")
    while num != '':
        acc = acc + num
        count = count + 1
        num = input("enter a number" (negative to exit)>>")
    print("average: {}".format(acc / count))
    average_sentinel()

 def average_file():
 acc = 0
 count = 0
 file_name = "file_name.txt"
 file = open(file_name, "r")
 for line in file:
    num = eval(line)
    acc = acc + num
    count = count + 1
 print("average: {}".format(acc / count))


def average_file_while():
 acc = 0
 count = 0
 file_name = "file_name.txt"
 file = open(file_name, "r")
 line = file.readline()
 while line != '':
    num = eval(line)
    acc = acc + num
    count = count + 1
    line = file.readline()
 print("average: {}".format(acc / count))
    if __name__ == '_main_':
    average_file_while()


def average_file_while():
    acc = 0
    count = 0
    file_name = "nested_loop.txt"
    file = open(file_name, "r")
    line = file.readline()
    while line != '':
        nums_string = line.split(', ')
        i = 0
        while i < len(nums_string):
            num = nums_string[i]
            acc = acc + eval(num)
            count = count + 1
            i = i + 1
        for num in nums_string:
            num = eval(num)
            acc = acc + num
            count = count + 1
        line = file.readline()
    print("average: {}".format(acc / count))
    if __name__ == '_main_':
        average_file_while()

